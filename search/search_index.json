{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"rdsa-utils","text":"<p>This site contains the project documentation for <code>rdsa-utils</code>, a suite of pyspark, pandas, and general pipeline utils for Reproducible Data Science and Analysis (RDSA) projects.</p>"},{"location":"#table-of-contents","title":"Table Of Contents","text":"<ol> <li>API reference</li> </ol> <p>Quickly find what you're looking for depending on your use case by looking at the different pages.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<p>The following prerequisites are required for <code>rdsa-utils</code>:</p> <ul> <li>Python 3.7 or higher</li> <li>Poetry</li> </ul>"},{"location":"reference/","title":"API reference","text":"<p>This part of the project documentation focuses on an information-oriented approach. Use it as a reference for the technical implementation of the<code>rdsa-utils</code> codebase.</p>"},{"location":"reference/#rdsa_utils.test_utils","title":"<code>rdsa_utils.test_utils</code>","text":"<p>Functions and fixtures used with test suites.</p>"},{"location":"reference/#rdsa_utils.test_utils.Case","title":"<code>Case(label: Optional[str] = None, marks: Optional[MarkDecorator] = None, **kwargs: Optional[MarkDecorator])</code>","text":"<p>Container for a test case, with optional test ID.</p> <p>The Case class is to be used in conjunction with <code>parameterize_cases</code>.</p> <p>Attributes:</p> Name Type Description <code>    label</code> <pre><code>Optional test ID. Will be displayed for each test when\nrunning `pytest -v`.\n</code></pre> <p>marks     Optional pytest marks to denote any tests to skip etc. kwargs     Parameters used for the test cases.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; Case(label=\"some test name\", foo=10, bar=\"some value\")\n\n&gt;&gt;&gt; Case(\n&gt;&gt;&gt;     label=\"some test name\",\n&gt;&gt;&gt;     marks=pytest.mark.skip(reason='not implemented'),\n&gt;&gt;&gt;     foo=10,\n&gt;&gt;&gt;     bar=\"some value\"\n&gt;&gt;&gt; )\n</code></pre>"},{"location":"reference/#rdsa_utils.test_utils.Case--see-also","title":"See Also","text":"<p>Modified from https://github.com/ckp95/pytest-parametrize-cases to allow pytest mark usage.</p> <p>Initialise objects.</p>"},{"location":"reference/#rdsa_utils.test_utils.Case.__repr__","title":"<code>__repr__() -&gt; str</code>","text":"<p>Return string.</p>"},{"location":"reference/#rdsa_utils.test_utils.create_dataframe","title":"<code>create_dataframe(data: List[Tuple[str]], **kwargs: List[Tuple[str]]) -&gt; pd.DataFrame</code>","text":"<p>Create pandas df from tuple data with a header.</p>"},{"location":"reference/#rdsa_utils.test_utils.create_spark_df","title":"<code>create_spark_df(spark_session)</code>","text":"<p>Create Spark DataFrame from tuple data with first row as schema.</p>"},{"location":"reference/#rdsa_utils.test_utils.create_spark_df--example","title":"Example:","text":"<p>create_spark_df([     ('column1', 'column2', 'column3'),     ('aaaa', 1, 1.1) ])</p> <p>Can specify the schema alongside the column names: create_spark_df([     ('column1 STRING, column2 INT, column3 DOUBLE'),     ('aaaa', 1, 1.1) ])</p>"},{"location":"reference/#rdsa_utils.test_utils.parametrize_cases","title":"<code>parametrize_cases(*cases: Case)</code>","text":"<p>More user friendly parameterize cases testing.</p> <p>Utilise as a decorator on top of test function.</p> <p>Examples:</p> <pre><code>@parameterize_cases(\n    Case(\n        label=\"some test name\",\n        foo=10,\n        bar=\"some value\"\n    ),\n    Case(\n        label=\"some test name #2\",\n        foo=20,\n        bar=\"some other value\"\n    ),\n)\ndef test(foo, bar):\n    ...\n</code></pre>"},{"location":"reference/#rdsa_utils.test_utils.parametrize_cases--see-also","title":"See Also","text":"<p>Source: https://github.com/ckp95/pytest-parametrize-cases</p>"},{"location":"reference/#rdsa_utils.test_utils.spark_session","title":"<code>spark_session()</code>","text":"<p>Set up spark session fixture.</p>"},{"location":"reference/#rdsa_utils.test_utils.suppress_py4j_logging","title":"<code>suppress_py4j_logging()</code>","text":"<p>Suppress spark logging.</p>"},{"location":"reference/#rdsa_utils.test_utils.to_date","title":"<code>to_date(dt: str) -&gt; datetime.date</code>","text":"<p>Convert date string to datetime.date type.</p>"},{"location":"reference/#rdsa_utils.test_utils.to_datetime","title":"<code>to_datetime(dt: str) -&gt; datetime.datetime</code>","text":"<p>Convert datetime string to datetime.datetime type.</p>"},{"location":"reference/#rdsa_utils.test_utils.to_spark","title":"<code>to_spark(spark_session)</code>","text":"<p>Convert pandas df to spark.</p>"}]}